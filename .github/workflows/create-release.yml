name: "Release"

on:
  push:
    branches:
      - main

jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from PowerShell script
        id: extract_version
        shell: pwsh 
        run: |
          $versionLine = Get-Content -Path create.ps1 | Select-String -Pattern '^# Version: (.+)$' | ForEach-Object { $_.Matches.Groups[1].Value.Trim() }
          Write-Host "Extracted version: $matches[1]"
          echo "RELEASE_TAG=$($matches[1])" >> $GITHUB_ENV

      - name: Create and push tag
        if: env.RELEASE_TAG
        run: |
          git tag -a $RELEASE_TAG -m "Release $RELEASE_TAG"
          git push origin $RELEASE_TAG

      - name: "Debug info"
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "RELEASE_TAG: $RELEASE_TAG"

      - name: "Create release"
        uses: "actions/github-script@v6"
        with:
          github-token: "${{ secrets.GHTOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
